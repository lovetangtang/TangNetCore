// <auto-generated />
using System;
using EFCore.Models.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EFCore.Models.Migrations
{
    [DbContext(typeof(ApiDBContent))]
    partial class ApiDBContentModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EFCore.Models.Models.BankInfoLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Cdate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CDate")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<int?>("EmpId")
                        .HasColumnName("EmpID")
                        .HasColumnType("int");

                    b.Property<int?>("Moudel")
                        .HasColumnType("int");

                    b.Property<int?>("OperateType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("BankInfoLog");

                    b.HasComment("银行账号日志添加");
                });

            modelBuilder.Entity("EFCore.Models.Models.CfHsPayFlowInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BankAccount")
                        .HasColumnType("varchar(300)")
                        .HasComment("开户行及账号")
                        .HasMaxLength(300)
                        .IsUnicode(false);

                    b.Property<decimal?>("BeforePaidMoney")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(8, 2)")
                        .HasDefaultValueSql("((0))")
                        .HasComment("期前累计已付金额");

                    b.Property<decimal?>("BeforePayMoney")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(8, 2)")
                        .HasDefaultValueSql("((0))")
                        .HasComment("期前累计应付金额");

                    b.Property<string>("CapMoney")
                        .HasColumnType("varchar(200)")
                        .HasComment("大写金额")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<DateTime?>("Cdate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CDate")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())")
                        .HasComment("创建时间");

                    b.Property<int?>("CempId")
                        .HasColumnName("CEmpID")
                        .HasColumnType("int")
                        .HasComment("创建人");

                    b.Property<string>("CempName")
                        .HasColumnName("CEmpName")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("创建人姓名")
                        .HasMaxLength(50);

                    b.Property<decimal?>("CmDynamicMoney")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(8, 2)")
                        .HasDefaultValueSql("((0))")
                        .HasComment("合同动态金额含补充协议");

                    b.Property<string>("CmMeetScale")
                        .HasColumnType("varchar(100)")
                        .HasComment("累计应占合同比")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<decimal?>("CmMoney")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(8, 2)")
                        .HasDefaultValueSql("((0))")
                        .HasComment("合同金额");

                    b.Property<string>("CmName")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasComment("合同名称")
                        .HasMaxLength(150);

                    b.Property<decimal?>("CmPayMoney")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(8, 2)")
                        .HasDefaultValueSql("((0))")
                        .HasComment("累计应付金额");

                    b.Property<string>("CmTotalScale")
                        .HasColumnType("varchar(100)")
                        .HasComment("累计已付占合同比")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("CmType")
                        .HasColumnType("nvarchar(100)")
                        .HasComment("合同类别")
                        .HasMaxLength(100);

                    b.Property<decimal?>("CmUnpaidMoney")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(8, 2)")
                        .HasDefaultValueSql("((0))")
                        .HasComment("累计应付未付金额");

                    b.Property<string>("MoneyName")
                        .HasColumnType("nvarchar(100)")
                        .HasComment("款项名称")
                        .HasMaxLength(100);

                    b.Property<decimal?>("NowPayMoney")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(8, 2)")
                        .HasDefaultValueSql("((0))")
                        .HasComment("本期应付金额");

                    b.Property<decimal?>("NowRealPayMoney")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(8, 2)")
                        .HasDefaultValueSql("((0))")
                        .HasComment("本期实际拟付");

                    b.Property<string>("PayMode")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("支付方式")
                        .HasMaxLength(50);

                    b.Property<string>("Payment")
                        .HasColumnType("nvarchar(500)")
                        .HasComment("本次付款说明")
                        .HasMaxLength(500);

                    b.Property<DateTime?>("PlanDate")
                        .HasColumnType("datetime")
                        .HasComment("计划付款日期");

                    b.Property<string>("ProjectName")
                        .HasColumnType("nvarchar(150)")
                        .HasComment("项目名称")
                        .HasMaxLength(150);

                    b.Property<string>("SignCompany")
                        .HasColumnType("nvarchar(150)")
                        .HasComment("签约单位")
                        .HasMaxLength(150);

                    b.HasKey("Id");

                    b.ToTable("cfHsPayFlowInfo");

                    b.HasComment("恒生付款审批表");
                });

            modelBuilder.Entity("EFCore.Models.Models.CmNumberCtl", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BranchId")
                        .HasColumnName("BranchID")
                        .HasColumnType("int");

                    b.Property<int?>("DepId")
                        .HasColumnName("DepID")
                        .HasColumnType("int");

                    b.Property<int>("EmpId")
                        .HasColumnName("EmpID")
                        .HasColumnType("int");

                    b.Property<int?>("NumberId")
                        .HasColumnName("NumberID")
                        .HasColumnType("int");

                    b.Property<int?>("RoleId")
                        .HasColumnName("RoleID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("cmNumberCtl");

                    b.HasComment("合同编号权限");
                });

            modelBuilder.Entity("EFCore.Models.Models.CmNumberDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Const")
                        .HasColumnType("int");

                    b.Property<string>("Custom")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("DateFormat")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int?>("SerialCycle")
                        .HasColumnType("int");

                    b.Property<int?>("SerialLength")
                        .HasColumnType("int");

                    b.Property<int?>("SerialStart")
                        .HasColumnType("int");

                    b.Property<bool?>("SerialZero")
                        .HasColumnType("bit");

                    b.Property<string>("TimeFormat")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("cmNumberDetail");

                    b.HasComment(@"合同规则明细
   流水号累计周期 -1：不循环；0：按日；1：按月；按年");
                });

            modelBuilder.Entity("EFCore.Models.Models.CmNumberInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("NumberId")
                        .HasColumnName("NumberID")
                        .HasColumnType("int");

                    b.Property<int>("RuleId")
                        .HasColumnName("RuleID")
                        .HasColumnType("int");

                    b.Property<int>("TypeId")
                        .HasColumnName("TypeID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("cmNumberInfo");

                    b.HasComment("合同编号规则明细");
                });

            modelBuilder.Entity("EFCore.Models.Models.CmNumberRule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Cdate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CDate")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("CreateUser")
                        .HasColumnType("int");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("UpdateUser")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("cmNumberRule");

                    b.HasComment("合同编号规则");
                });

            modelBuilder.Entity("EFCore.Models.Models.Orders", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("EFCore.Models.Models.Published", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Added")
                        .HasColumnType("datetime2");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpiresAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int>("Retries")
                        .HasColumnType("int");

                    b.Property<string>("StatusName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.ToTable("Published","cap");
                });

            modelBuilder.Entity("EFCore.Models.Models.Received", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Added")
                        .HasColumnType("datetime2");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpiresAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Group")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int>("Retries")
                        .HasColumnType("int");

                    b.Property<string>("StatusName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.ToTable("Received","cap");
                });

            modelBuilder.Entity("EFCore.Models.Models.WxCustomMsg", b =>
                {
                    b.Property<DateTime?>("Cdate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CDate")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("DocId")
                        .HasColumnName("DocID")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Link")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("LoginId")
                        .HasColumnName("LoginID")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ModCode")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(4000)")
                        .HasMaxLength(4000);

                    b.Property<string>("PicUrl")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.ToTable("wxCustomMsg");
                });
#pragma warning restore 612, 618
        }
    }
}
